plugins {
    id("com.android.library")
    id("kotlin-android")
 }

android {
    compileSdkVersion 32
//    buildToolsVersion 30.0.2

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
//        version = libVersion
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    buildFeatures {
        compose = true
    }
    lintOptions {
//        baseline file(rootProject.ext.getLintFileName)
        checkDependencies true
        abortOnError false
        absolutePaths false
    }
}

ext.playCustomRingback = {
    def playCustomRingback  = System.getenv("playCustomRingback");

    if (playCustomRingback == null) {
        logger.log(LogLevel.INFO, "Could not locate playCustomRingback environment variable. " +
                "Trying local.properties")
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            playCustomRingback = properties.getProperty('playCustomRingback')
        }
    }

    if (playCustomRingback == null) {
        playCustomRingback = false
    }

    return playCustomRingback;
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())


dependencies {
//    implementation 'com.google.android.material:material:1.3.0'
    implementation "com.twilio:audioswitch:1.1.4"
    implementation "com.twilio:voice-android:6.0.7"
    implementation "com.google.android.material:material:1.4.0"
//    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.google.code.gson:gson:2.9.1'
  }


task deleteJar(type: Delete) {
    delete 'libs/c2cembed.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/aar_main_jar/release/')
    into('libs/')
    include('classes.jar')
    rename('classes.jar', 'c2cembed.jar')
}

createJar.dependsOn(deleteJar, build)


//1. Add below line
//===============================
buildscript {
    ext.kotlin_version = '1.7.20'
    repositories {
        google()
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
//===============================


plugins {
    id("com.android.library")
    id("kotlin-android")
    id("maven-publish") // 2. Add this line
 }

android {
    compileSdkVersion 32
//    buildToolsVersion 30.0.2

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
//        version = libVersion
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            consumerProguardFiles 'consumer-rules.pro' //3. Add this line
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
    buildFeatures {
        compose = true
    }
    lintOptions {
//        baseline file(rootProject.ext.getLintFileName)
        checkDependencies true
        abortOnError false
        absolutePaths false
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0-alpha08'
    }
}
// 4. Add below line
//===============================
        java {
            toolchain {
                languageVersion = JavaLanguageVersion.of(17)        // << --- ADD This
            }
        }
//===============================

java {
    sourceCompatibility = JavaVersion.VERSION_17            // << --- ADD This
    targetCompatibility = JavaVersion.VERSION_17
}


ext.playCustomRingback = {
    def playCustomRingback  = System.getenv("playCustomRingback");

    if (playCustomRingback == null) {
        logger.log(LogLevel.INFO, "Could not locate playCustomRingback environment variable. " +
                "Trying local.properties")
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').exists()) {
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            playCustomRingback = properties.getProperty('playCustomRingback')
        }
    }

    if (playCustomRingback == null) {
        playCustomRingback = false
    }

    return playCustomRingback;
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())


dependencies {
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation "com.twilio:audioswitch:1.1.4"
    implementation "com.twilio:voice-android:6.0.7"
    implementation "com.google.android.material:material:1.4.0"
  }


task deleteJar(type: Delete) {
    delete 'libs/c2cembed.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/aar_main_jar/release/')
    into('libs/')
    include('classes.jar')
    rename('classes.jar', 'c2cembed.jar')
}

createJar.dependsOn(deleteJar, build)

publishing {
    publications{
        release(MavenPublication){
            groupId = 'com.github.naresh-vgroupinc'
            artifactId = 'C2C-Embedded-Library'
            version = "0.2.0"
        }

    }
}
afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.naresh-vgroupinc'
                artifactId = 'C2C-Embedded-Library'
                version = "0.2.0"
            }
        }
    }
}

//afterEvaluate{
//    android.setLibraryVariants()
//}


// 5. Add below line
//===============================
//publishing {
//    publications {
//        maven(MavenPublication) {
//            groupId = 'com.github.naresh-vgroupinc'
//            artifactId = 'com.TroyVGroup.C2C-Embedded-Library'
//            version = "1.0"
//            pom {
//                description = 'First release'
//            }
//        }
//    }
//    repositories {
//        mavenLocal()
//    }
//}